<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
      <script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script src="https://code.highcharts.com/modules/export-data.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">


<script type="text/javascript">


      var selectedDate='';
      var tdate='';
      var chartdata;
      var selectedGenerator;
   $( function() {
    $( "#calender1" ).datepicker({dateFormat : "dd-mm-yy"});
    $( "#calender2" ).datepicker({dateFormat : "dd-mm-yy"});

        var today = new Date();
var dd = today.getDate();
var mm = today.getMonth()+1; //January is 0!

var yyyy = today.getFullYear();
if(dd<10){
    dd='0'+dd;
} 
if(mm<10){
    mm='0'+mm;
} 
var today = dd+'-'+mm+'-'+yyyy;

document.getElementById("calender1").value = today;
document.getElementById("calender2").value = today;


});







  function showGraph(){


  selectedDate=document.getElementById("calender1").value;

 


var fromDate=document.getElementById("calender1").value;
var toDate=document.getElementById("calender2").value
var from=$( "#calender1" ).datepicker('getDate');
var dates=[];
var i=1;
dates.push(fromDate);
  
if(fromDate!=toDate)
{  

  do{   

  var x=from;
   x.setDate(x.getDate()+i);
   var dd = x.getDate();
var mm = x.getMonth()+1; //January is 0!

var yyyy = x.getFullYear();
if(dd<10){
    dd='0'+dd;
} 
if(mm<10){
    mm='0'+mm;
}
var x = dd+'-'+mm+'-'+yyyy;
dates.push(x);
}while(x!=toDate);

}

//console.log(dates);

    $.post('/gamspwc/getMCPByDates',{dates:dates},function(res){

        /*var dcvcdata=res['mcp'];
        var netdemanddata=res['netdemanddata'];

        console.log(dcvcdata);
        console.log(netdemanddata);

        var mcparr=[];

        var xaxisdata=[];

        for(let i=0;i<dates.length;i++)
        {

          for(let j=0;j<96;j++)
          {

            //xaxisdata.push(dates[i] + ' : ' + (j+1).toString());
            xaxisdata.push((j+1).toString());

            dcvcdata[i][j].sort(function(a, b){return a.vc - b.vc});
            //console.log('net demand is: ' + netdemanddata[i][j].toString());
            var cumm=0;
            var flag=0;
            if(netdemanddata[i][j]==0)
            {
                mcparr.push(0);
                flag=1;
                continue;
            }

            for(let k=0;k<dcvcdata[i][j].length;k++)
            {
                cumm += Number(dcvcdata[i][j][k]['dc']);
                if(cumm > netdemanddata[i][j])
                {
                  var vcdata=0;
                   if(((cumm - netdemanddata[i][j]) < (netdemanddata[i][j] - (cumm - Number(dcvcdata[i][j][k]['dc'])))) || k==0)
                    {
                      vcdata=dcvcdata[i][j][k]['vc'];
                    }

                    else
                      {
                        vcdata=dcvcdata[i][j][k-1]['vc'];
                      }
                  //console.log('pushing to mcparr')
                  mcparr.push(Number(vcdata));
                  flag=1;
                  //console.log('found vcdata for '+i.toString() + ' : ' + (j+1).toString());
                  break;
                }

                else if(k==dcvcdata[i][j].length - 1)  //case where netdemand and supply doesnot meet/cut each other
                {
                  //console.log('No Intersection found');
                  mcparr.push(Number(dcvcdata[i][j][k]['vc']));
                  flag=1;
                }
            }

            if(flag==0)
              mcparr.push(0);

          }

        }

        console.log(mcparr); */
        mcparr=res['mcparr'];
        xaxisdata=res['xaxisdata'];


$.post('/marginalCost/smoothSMP',{selectedDate:dates},function(res){
   //console.log(JSON.parse(res))
chartdatasm=JSON.parse(res);

let ai=[]
let airras=[]
for(let i=1;i<chartdatasm.length;i++){

 
  ai.push(parseInt(chartdatasm[i][1]))
  airras.push(parseInt(chartdatasm[i][3]))
}


$.post('/gamspwc/getAveragePrice',{date:dates,region:"0"},function(res){
   
chartdata=JSON.parse(res);


//console.log(chartdata);
var sch=[];
var preAVG=[];
var postAVG=[];
var diifAVG=[];
var presum=0;
var postsum=0;
for(var i=0;i<chartdata.length;i++){
  
  sch.push(-1*parseInt(chartdata[i][2]*10000/chartdata[i][1]));
  preAVG.push(parseInt(chartdata[i][6]*10000/chartdata[i][4]));
  postAVG.push(parseInt(chartdata[i][5]*10000/chartdata[i][3]));

diifAVG.push(parseInt(chartdata[i][5]*10000/chartdata[i][3])-parseInt(chartdata[i][6]*10000/chartdata[i][4]));
presum+=parseInt(chartdata[i][6]*10000/chartdata[i][4]);
postsum+=parseInt(chartdata[i][5]*10000/chartdata[i][3]);

}





    $.post('/iexmcp/getIEXMCPData',{dates:dates},function(res){
        
        //console.log(res);
        var umcparr=res;
        var xaxisdata=[];
        for(var i=0;i<dates.length;i++)
        {
          for(var j=0;j<96;j++)
          {
            xaxisdata.push(dates[i] + ' : ' + parseInt(j+1));
            umcparr[i*96 + j] = (parseInt(umcparr[i*96 + j])/10); 
          }
        }

 












     Highcharts.chart('chart_div', {

    chart: {
        type: 'area',
         zoomType: 'xy'
    }, legend: {
              itemStyle: {
                 fontSize: '20px',
                 color: '#000000'
              }

        }, yAxis: {
       
        title: {

            text: 'Paisa'
        }
    },
    title: {
        text:'UMCP - MCP - SMP - Average Price(P/U)from date: ' + dates[0] + " to " + dates[dates.length -1]
    },
    xAxis: {
        categories:xaxisdata,
            labels: {
            fontSize:'25px',
            style: {
                color:'#000000'
            }
        },
        
    },
    
    credits: {
        enabled: false
    },
    series: [ 
    //  {
    //     name: 'MCP',
    //     data:mcparr,
    //     color:' #FA8072'
    // },
    {
      name:'SCEDSMP',
      data:ai,
      color:'#AA0000'
    },
    {
      name:'Average Price',
      data:postAVG,
      color:'#2A0000'
    },
    {
      name:'UMCP',
      data:umcparr,
      color:'#321899'
    },{
      name:'RRASSMP',
      data:airras,
      color:'#fcba03'
    }
    ]
});



});


});




});
































    });
  }
</script>


<div class="row">

    <div class="col-lg-3">
    <label for="calender1">FROM DATE:</label>
     <input type="text" class="form-control"   id="calender1">
    </div>

    <div class="col-lg-3">
    <label for="calender2">TO DATE:</label>
     <input type="text" class="form-control"   id="calender2">
    </div>

    <div class="col-lg-2">
    <label>submit</label>
    <button class="btn btn-outline-primary form-control" onclick="showGraph()" >submit</button>
    </div>
</div>




<div id="chart_div" style="width: 100%; height: 500px;"></div>