<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
      <script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script src="https://code.highcharts.com/modules/export-data.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">


<script type="text/javascript">


      var selectedDate='';
      var tdate='';
      var chartdata;
      var selectedGenerator;
   $( function() {
    $( "#calender1" ).datepicker({dateFormat : "dd-mm-yy"});
    $( "#calender2" ).datepicker({dateFormat : "dd-mm-yy"});

        var today = new Date();
var dd = today.getDate();
var mm = today.getMonth()+1; //January is 0!

var yyyy = today.getFullYear();
if(dd<10){
    dd='0'+dd;
} 
if(mm<10){
    mm='0'+mm;
} 
var today = dd+'-'+mm+'-'+yyyy;

document.getElementById("calender1").value = today;
document.getElementById("calender2").value = today;


});







  function showGraph(){


  selectedDate=document.getElementById("calender1").value;

 


var fromDate=document.getElementById("calender1").value;
var toDate=document.getElementById("calender2").value
 var from=$( "#calender1" ).datepicker('getDate');
  var dates=[];
  var i=1;
  dates.push(fromDate);
  
if(fromDate!=toDate)
{  

  do{   

  var x=from;
   x.setDate(x.getDate()+i);
   var dd = x.getDate();
var mm = x.getMonth()+1; //January is 0!

var yyyy = x.getFullYear();
if(dd<10){
    dd='0'+dd;
} 
if(mm<10){
    mm='0'+mm;
}
var x = dd+'-'+mm+'-'+yyyy;
dates.push(x);
}while(x!=toDate);

}

console.log(dates);

    $.post('/gamspwc/getMCPByDates',{dates:dates},function(res){
        mcparr=(JSON.parse(res))['mcparr'];

        //console.log("MCPARRR",res)
        xaxisdata=res['xaxisdata'];


$.post('/marginalcost/getTodayCost',{selectedDate:dates},function(res){
chartdata=JSON.parse(res);
//console.log(chartdata);

var ai=[];
for(var i=1;i<chartdata.length;i++){
     ai.push(chartdata[i][4]);    
}








$.post('/iexmcp/getIEXMCPData',{dates:dates},function(res){
        
       // console.log(res);
        var umcparr=res;

        for(var i=0;i<dates.length;i++)
        {
          for(var j=0;j<96;j++)
          {
            umcparr[i*96 + j] = (parseInt(umcparr[i*96 + j])/10); 
          }
        }



// Plotting MCP v/s SMP
//console.log("mcparr",mcparr)
var finalD=[];
for(let i=0;i<mcparr.length;i++)
{
  let temp=[];
  if(mcparr[i]!=0 && ai[i]!=0) // mcp or smp should not be equal to zero
  {
    temp.push(mcparr[i]);
    temp.push(ai[i]);

    finalD.push(temp);
  }
  
}


Highcharts.chart('chart_div1', {
    chart: {
        type: 'scatter',
        zoomType: 'xy'
    },
    title: {
        text: 'MCP vs SMP'
    },
    
    xAxis: {
     
        title: {
            text: 'MCP'
        }
    },
    yAxis: {
        
        title: {

            text: 'SMP'
        }
    },
    series: [{
        name: 'MCP v/s SMP',
        color: 'rgba(223, 83, 83, .5)',
        data: finalD

    }
    ]
});







//Plotting MCP v/s Average Price

var finalD2=[];
for(let i=0;i<mcparr.length;i++)
{
  let temp=[];
  if(mcparr[i]!=0 && umcparr[i]!=0 ) // mcp or average price should not be equal to zero
  {
    temp.push(mcparr[i]);
    temp.push(umcparr[i]);

    finalD2.push(temp);
  }
  
}







Highcharts.chart('chart_div2', {
    chart: {
        type: 'scatter',
        zoomType: 'xy'
    },
    title: {
        text: 'MCP vs UMCP'
    },
    
    xAxis: {
     
        title: {
            text: 'MCP'
        }
    },
    yAxis: {
        
        title: {

            text: 'UMCP'
        }
    },
    series: [{
        name: 'MCP v/s UMCP',
        color: 'rgba(223, 83, 83, .5)',
        data: finalD2

    }
    ]
});











//Plotting SMP v/s Average Price
var finalD3=[];

for(let i=0;i<ai.length;i++)
{
  let temp=[];
  if(ai[i]!=0 && umcparr[i]!=0 ) // mcp or average price should not be equal to zero
  {
    temp.push(ai[i]);
    temp.push(umcparr[i]);

    finalD3.push(temp);
  }
  
}


Highcharts.chart('chart_div3', {
    chart: {
        type: 'scatter',
        zoomType: 'xy'
    },
    title: {
        text: 'SMP vs UMCP'
    },
    
    xAxis: {
     
        title: {
            text: 'SMP'
        }
    },
    yAxis: {
        
        title: {

            text: 'UMCP'
        }
    },
    series: [{
        name: 'SMP v/s UMCP',
        color: 'rgba(223, 83, 83, .5)',
        data: finalD3

    }
    ]
});
















});












});









    });
  }
</script>


<div class="row">

    <div class="col-lg-3">
    <label for="calender1">FROM DATE:</label>
     <input type="text" class="form-control"   id="calender1">
    </div>

    <div class="col-lg-3">
    <label for="calender2">TO DATE:</label>
     <input type="text" class="form-control"   id="calender2">
    </div>

    <div class="col-lg-2">
    <label>submit</label>
    <button class="btn btn-outline-primary form-control" onclick="showGraph()" >submit</button>
    </div>
</div>






<div class="row">
<div id="chart_div1" style="width: 100%; height: 500px;" class="col-lg-6 "></div>
<div id="chart_div2" style="width: 100%; height: 500px;" class="col-lg-6 "></div>
</div>

<div class="row">
<div id="chart_div3" style="width: 100%; height: 500px;" class="col-lg-6 "></div>
<div id="chart_div4" style="width: 100%; height: 500px;" class="col-lg-6 "></div>
</div>
